// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountManagerModelSmmManagerModel", b =>
                {
                    b.Property<int>("AccountManagersId")
                        .HasColumnType("int");

                    b.Property<int>("SmmManagersId")
                        .HasColumnType("int");

                    b.HasKey("AccountManagersId", "SmmManagersId");

                    b.HasIndex("SmmManagersId");

                    b.ToTable("AccountSmmManager", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entities.AccountManagerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountManagers");
                });

            modelBuilder.Entity("Infrastructure.Entities.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountManagerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Infrastructure.Entities.CustomerPhoneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerPhones");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SmmManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerModelId");

                    b.HasIndex("SmmManagerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Infrastructure.Entities.SmmManagerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SmmManagers");
                });

            modelBuilder.Entity("AccountManagerModelSmmManagerModel", b =>
                {
                    b.HasOne("Infrastructure.Entities.AccountManagerModel", null)
                        .WithMany()
                        .HasForeignKey("AccountManagersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.SmmManagerModel", null)
                        .WithMany()
                        .HasForeignKey("SmmManagersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Infrastructure.Entities.CustomerModel", b =>
                {
                    b.HasOne("Infrastructure.Entities.AccountManagerModel", "AccountManager")
                        .WithMany()
                        .HasForeignKey("AccountManagerId");

                    b.Navigation("AccountManager");
                });

            modelBuilder.Entity("Infrastructure.Entities.CustomerPhoneModel", b =>
                {
                    b.HasOne("Infrastructure.Entities.CustomerModel", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Infrastructure.Entities.ProjectModel", b =>
                {
                    b.HasOne("Infrastructure.Entities.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerModelId");

                    b.HasOne("Infrastructure.Entities.SmmManagerModel", "SmmManager")
                        .WithMany()
                        .HasForeignKey("SmmManagerId");

                    b.Navigation("CustomerModel");

                    b.Navigation("SmmManager");
                });
#pragma warning restore 612, 618
        }
    }
}
